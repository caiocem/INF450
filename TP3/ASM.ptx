//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

        // .globl       _Z13somaPolinomioPyS_yS_
.extern .func  (.param .b32 func_retval0) vprintf
(
        .param .b64 vprintf_param_0,
        .param .b64 vprintf_param_1
)
;
.global .align 16 .b8 $str[24] = {115, 111, 109, 97, 32, 112, 111, 108, 105, 110, 111, 109, 105, 111, 32, 58, 32, 37, 117, 32, 109, 115, 10, 0};
.global .align 16 .b8 $str1[20] = {115, 111, 109, 97, 32, 118, 101, 116, 111, 114, 32, 58, 32, 37, 117, 32, 109, 115, 10, 0};

.visible .entry _Z13somaPolinomioPyS_yS_(
        .param .u64 _Z13somaPolinomioPyS_yS__param_0,
        .param .u64 _Z13somaPolinomioPyS_yS__param_1,
        .param .u64 _Z13somaPolinomioPyS_yS__param_2,
        .param .u64 _Z13somaPolinomioPyS_yS__param_3
)
{
        .local .align 8 .b8     __local_depot0[8];
        .reg .b64       %SP;
        .reg .b64       %SPL;
        .reg .pred      %p<3>;
        .reg .b32       %r<12>;
        .reg .b64       %rd<62>;


        mov.u64         %rd61, __local_depot0;
        cvta.local.u64  %SP, %rd61;
        ld.param.u64    %rd1, [_Z13somaPolinomioPyS_yS__param_0];
        ld.param.u64    %rd2, [_Z13somaPolinomioPyS_yS__param_1];
        ld.param.u64    %rd4, [_Z13somaPolinomioPyS_yS__param_2];
        ld.param.u64    %rd3, [_Z13somaPolinomioPyS_yS__param_3];
        mov.u32         %r4, %ctaid.x;
        mov.u32         %r5, %ntid.x;
        mov.u32         %r6, %tid.x;
        mad.lo.s32      %r1, %r4, %r5, %r6;
        cvt.u64.u32     %rd5, %r1;
        setp.ge.u64     %p1, %rd5, %rd4;
        @%p1 bra        BB0_3;

        cvta.to.global.u64      %rd6, %rd3;
	cvta.to.global.u64      %rd7, %rd2;
        cvta.to.global.u64      %rd8, %rd1;
        // inline asm
        mov.u32 %r7,%clock;
        // inline asm
        shl.b32         %r9, %r1, 2;
        mul.wide.s32    %rd9, %r9, 8;
        add.s64         %rd10, %rd8, %rd9;
        ld.global.u64   %rd11, [%rd10];
        mul.lo.s64      %rd12, %rd11, %rd11;
        mul.lo.s64      %rd13, %rd12, %rd11;
        mul.lo.s64      %rd14, %rd13, 5;
        add.s64         %rd15, %rd7, %rd9;
        mul.lo.s64      %rd16, %rd11, 7;
        ld.global.u64   %rd17, [%rd15];
        shl.b64         %rd18, %rd17, 3;
        add.s64         %rd19, %rd18, %rd16;
        mul.lo.s64      %rd20, %rd19, %rd17;
        sub.s64         %rd21, %rd14, %rd17;
        add.s64         %rd22, %rd21, %rd20;
        add.s64         %rd23, %rd6, %rd9;
        st.global.u64   [%rd23], %rd22;
        ld.global.u64   %rd24, [%rd10+8];
        mul.lo.s64      %rd25, %rd24, %rd24;
        mul.lo.s64      %rd26, %rd25, %rd24;
        mul.lo.s64      %rd27, %rd26, 5;
        mul.lo.s64      %rd28, %rd24, 7;
	ld.global.u64   %rd29, [%rd15+8];
        shl.b64         %rd30, %rd29, 3;
        add.s64         %rd31, %rd30, %rd28;
        mul.lo.s64      %rd32, %rd31, %rd29;
        sub.s64         %rd33, %rd27, %rd29;
        add.s64         %rd34, %rd33, %rd32;
        st.global.u64   [%rd23+8], %rd34;
        ld.global.u64   %rd35, [%rd10+16];
        mul.lo.s64      %rd36, %rd35, %rd35;
        mul.lo.s64      %rd37, %rd36, %rd35;
        mul.lo.s64      %rd38, %rd37, 5;
        mul.lo.s64      %rd39, %rd35, 7;
        ld.global.u64   %rd40, [%rd15+16];
        shl.b64         %rd41, %rd40, 3;
        add.s64         %rd42, %rd41, %rd39;
        mul.lo.s64      %rd43, %rd42, %rd40;
        sub.s64         %rd44, %rd38, %rd40;
        add.s64         %rd45, %rd44, %rd43;
        st.global.u64   [%rd23+16], %rd45;
        ld.global.u64   %rd46, [%rd10+24];
        mul.lo.s64      %rd47, %rd46, %rd46;
        mul.lo.s64      %rd48, %rd47, %rd46;
        mul.lo.s64      %rd49, %rd48, 5;
        mul.lo.s64      %rd50, %rd46, 7;
        ld.global.u64   %rd51, [%rd15+24];
        shl.b64         %rd52, %rd51, 3;
        add.s64         %rd53, %rd52, %rd50;
	mul.lo.s64      %rd54, %rd53, %rd51;
        sub.s64         %rd55, %rd49, %rd51;
        add.s64         %rd56, %rd55, %rd54;
        st.global.u64   [%rd23+24], %rd56;
        // inline asm
        mov.u32 %r8,%clock;
        // inline asm
        setp.ne.s32     %p2, %r1, 0;
        @%p2 bra        BB0_3;

        sub.s32         %r10, %r8, %r7;
        add.u64         %rd57, %SP, 0;
        cvta.to.local.u64       %rd58, %rd57;
        st.local.u32    [%rd58], %r10;
        mov.u64         %rd59, $str;
        cvta.global.u64         %rd60, %rd59;
        // Callseq Start 0
        {
        .reg .b32 temp_param_reg;
        // <end>}
        .param .b64 param0;
        st.param.b64    [param0+0], %rd60;
        .param .b64 param1;
        st.param.b64    [param1+0], %rd57;
	.param .b32 retval0;
        call.uni (retval0),
        vprintf,
        (
        param0,
        param1
        );
        ld.param.b32    %r11, [retval0+0];

        //{
        }// Callseq End 0

BB0_3:
        ret;
}

        // .globl       _Z9somaVetorPyS_yS_
.visible .entry _Z9somaVetorPyS_yS_(
        .param .u64 _Z9somaVetorPyS_yS__param_0,
        .param .u64 _Z9somaVetorPyS_yS__param_1,
        .param .u64 _Z9somaVetorPyS_yS__param_2,
        .param .u64 _Z9somaVetorPyS_yS__param_3
)
{
        .local .align 8 .b8     __local_depot1[8];
        .reg .b64       %SP;
        .reg .b64       %SPL;
	.reg .pred      %p<3>;
        .reg .b32       %r<12>;
        .reg .b64       %rd<30>;


        mov.u64         %rd29, __local_depot1;
        cvta.local.u64  %SP, %rd29;
        ld.param.u64    %rd1, [_Z9somaVetorPyS_yS__param_0];
        ld.param.u64    %rd2, [_Z9somaVetorPyS_yS__param_1];
        ld.param.u64    %rd4, [_Z9somaVetorPyS_yS__param_2];
        ld.param.u64    %rd3, [_Z9somaVetorPyS_yS__param_3];
        mov.u32         %r4, %ctaid.x;
        mov.u32         %r5, %ntid.x;
        mov.u32         %r6, %tid.x;
        mad.lo.s32      %r1, %r4, %r5, %r6;
        cvt.u64.u32     %rd5, %r1;
        setp.ge.u64     %p1, %rd5, %rd4;
        @%p1 bra        BB1_3;

        cvta.to.global.u64      %rd6, %rd3;
        cvta.to.global.u64      %rd7, %rd2;
        cvta.to.global.u64      %rd8, %rd1;
        // inline asm
        mov.u32 %r7,%clock;
	// inline asm
        shl.b32         %r9, %r1, 2;
        mul.wide.s32    %rd9, %r9, 8;
        add.s64         %rd10, %rd8, %rd9;
        add.s64         %rd11, %rd7, %rd9;
        ld.global.u64   %rd12, [%rd11];
        ld.global.u64   %rd13, [%rd10];
        add.s64         %rd14, %rd12, %rd13;
        add.s64         %rd15, %rd6, %rd9;
        st.global.u64   [%rd15], %rd14;
        ld.global.u64   %rd16, [%rd11+8];
        ld.global.u64   %rd17, [%rd10+8];
        add.s64         %rd18, %rd16, %rd17;
        st.global.u64   [%rd15+8], %rd18;
        ld.global.u64   %rd19, [%rd11+16];
        ld.global.u64   %rd20, [%rd10+16];
        add.s64         %rd21, %rd19, %rd20;
        st.global.u64   [%rd15+16], %rd21;
        ld.global.u64   %rd22, [%rd11+24];
        ld.global.u64   %rd23, [%rd10+24];
        add.s64         %rd24, %rd22, %rd23;
        st.global.u64   [%rd15+24], %rd24;
        // inline asm
        mov.u32 %r8,%clock;
        // inline asm
	mov.u32 %r8,%clock;
        // inline asm
        setp.ne.s32     %p2, %r1, 0;
        @%p2 bra        BB1_3;

        sub.s32         %r10, %r8, %r7;
        add.u64         %rd25, %SP, 0;
        cvta.to.local.u64       %rd26, %rd25;
        st.local.u32    [%rd26], %r10;
        mov.u64         %rd27, $str1;
        cvta.global.u64         %rd28, %rd27;
        // Callseq Start 1
        {
        .reg .b32 temp_param_reg;
        // <end>}
        .param .b64 param0;
        st.param.b64    [param0+0], %rd28;
        .param .b64 param1;
        st.param.b64    [param1+0], %rd25;
        .param .b32 retval0;
        call.uni (retval0),
        vprintf,
        (
        param0,
	param1
        );
        ld.param.b32    %r11, [retval0+0];

        //{
        }// Callseq End 1

BB1_3:
        ret;
}
        // .globl       _Z11VetorRandomPyS_yS_S_
.visible .entry _Z11VetorRandomPyS_yS_S_(
        .param .u64 _Z11VetorRandomPyS_yS_S__param_0,
        .param .u64 _Z11VetorRandomPyS_yS_S__param_1,
        .param .u64 _Z11VetorRandomPyS_yS_S__param_2,
        .param .u64 _Z11VetorRandomPyS_yS_S__param_3,
        .param .u64 _Z11VetorRandomPyS_yS_S__param_4
)
{
        .local .align 8 .b8     __local_depot2[8];
        .reg .b64       %SP;
        .reg .b64       %SPL;
        .reg .pred      %p<4>;
        .reg .b32       %r<17>;
        .reg .b64       %rd<38>;
	
	mov.u64         %rd37, __local_depot2;
        cvta.local.u64  %SP, %rd37;
        ld.param.u64    %rd7, [_Z11VetorRandomPyS_yS_S__param_0];
        ld.param.u64    %rd8, [_Z11VetorRandomPyS_yS_S__param_1];
        ld.param.u64    %rd9, [_Z11VetorRandomPyS_yS_S__param_2];
        ld.param.u64    %rd10, [_Z11VetorRandomPyS_yS_S__param_3];
        ld.param.u64    %rd6, [_Z11VetorRandomPyS_yS_S__param_4];
        cvta.to.global.u64      %rd1, %rd10;
        cvta.to.global.u64      %rd2, %rd8;
        cvta.to.global.u64      %rd3, %rd7;
        add.u64         %rd11, %SP, 0;
        cvta.to.local.u64       %rd4, %rd11;
        mov.u32         %r6, %ctaid.x;
        mov.u32         %r7, %ntid.x;
        mov.u32         %r8, %tid.x;
        mad.lo.s32      %r1, %r6, %r7, %r8;
        cvt.u64.u32     %rd12, %r1;
        setp.ge.u64     %p1, %rd12, %rd9;
        @%p1 bra        BB2_5;
	
	 // inline asm
        mov.u32 %r9,%clock;
        // inline asm
        cvt.s64.s32     %rd5, %r1;
        mul.wide.s32    %rd13, %r1, 8;
        add.s64         %rd14, %rd3, %rd13;
        add.s64         %rd15, %rd2, %rd13;
        ld.global.u64   %rd16, [%rd15];
        ld.global.u64   %rd17, [%rd14];
        add.s64         %rd18, %rd16, %rd17;
        add.s64         %rd19, %rd1, %rd13;
        st.global.u64   [%rd19], %rd18;
        // inline asm
        mov.u32 %r10,%clock;
        // inline asm
        setp.ne.s32     %p2, %r1, 0;
        @%p2 bra        BB2_3;
	
	sub.s32         %r11, %r10, %r9;
        st.local.u32    [%rd4], %r11;
        mov.u64         %rd20, $str2;
        cvta.global.u64         %rd21, %rd20;
        // Callseq Start 2
        {
        .reg .b32 temp_param_reg;
        // <end>}
        .param .b64 param0;
        st.param.b64    [param0+0], %rd21;
        .param .b64 param1;
        st.param.b64    [param1+0], %rd11;
        .param .b32 retval0;
        call.uni (retval0),
        vprintf,
        (
        param0,
        param1
        );
        ld.param.b32    %r12, [retval0+0];
	
	 //{
        }// Callseq End 2

BB2_3:
	// inline asm
        mov.u32 %r13,%clock;
        // inline asm
        cvta.to.global.u64      %rd23, %rd6;
        shl.b64         %rd24, %rd5, 3;
        add.s64         %rd25, %rd23, %rd24;
        ld.global.u64   %rd26, [%rd25];
        shl.b64         %rd27, %rd26, 3;
        add.s64         %rd28, %rd3, %rd27;
        add.s64         %rd29, %rd2, %rd27;
        ld.global.u64   %rd30, [%rd29];
        ld.global.u64   %rd31, [%rd28];
        add.s64         %rd32, %rd30, %rd31;
        add.s64         %rd33, %rd1, %rd27;
        st.global.u64   [%rd33], %rd32;
        // inline asm
        mov.u32 %r14,%clock;
        // inline asm
        @%p2 bra        BB2_5;
	
	sub.s32         %r15, %r14, %r13;
        st.local.u32    [%rd4], %r15;
        mov.u64         %rd34, $str3;
        cvta.global.u64         %rd35, %rd34;
        // Callseq Start 3
        {
        .reg .b32 temp_param_reg;
        // <end>}
        .param .b64 param0;
        st.param.b64    [param0+0], %rd35;
        .param .b64 param1;
        st.param.b64    [param1+0], %rd11;
        .param .b32 retval0;
        call.uni (retval0),
        vprintf,
        (
        param0,
        param1
        );
        ld.param.b32    %r16, [retval0+0];
	
	//{
        }// Callseq End 3

BB2_5:
        ret;
}








